{"version":3,"sources":["dall/api.js","bll/Action.js","bll/CountryReducer.js","ui/Totalnput.js","ui/ShortName.js","ui/AboutCountryLocale.js","ui/AboutCountry.js","ui/FullName.js","ui/CodeCountry.js","ui/CurrenciesCountry.js","particlesOption.js","ui/ErrorMessage.js","ui/Header.js","ui/Selectcountry.js","ui/Progress.js","App.js","serviceWorker.js","bll/store.js","index.js"],"names":["instance","axios","baseURL","api","save","_get","path","this","Promise","resolve","get","then","res","data","catch","error","console","Error","getCountryFullName","fullName","getCountryShortName","shortName","getCountryCurrency","currencyCode","getCountryCode","code","getCountryALL","action","countryAll","type","GET_COUNTRYALL","shortNamecountry","GET_SHORTNAMECOUNTRY","fullNamecountry","GET_FULLNAMECOUNTRY","codeCountry","GET_CODECOUNTRY","newcountry","GET_ABOUTCOUNTRY","currenciesCountry","GET_CURRENCIESCOUNTRY","loading","LOADING_STATUS","ERROR_MESSAGE","initialState","dataCountry","tryCatch","act","dispatch","a","message","useStyles","makeStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","margin","TotalInput","props","useState","value","setValue","classes","textInput","useRef","Paper","className","InputBase","placeholder","inputProps","onKeyPress","event","key","onsearch","onChange","currentTarget","ref","IconButton","aria-label","onClick","ShortName","intl","useIntl","formatMessage","id","onsearchShortName","AboutCountryLocale","Array","isArray","name","map","v","object","defaultMessage","img","src","AppLocale","AboutCountry","tablesEL","r","index","FullName","onsearchFullName","CodeCountry","onsearchCodeCountry","CurrenciesCountry","onsearchCurrenciesCountry","extendedIcon","marginRight","particlesOption","particles","number","density","enable","value_area","line_linked","interactivity","detect_on","events","Alert","elevation","variant","marginBottom","CustomizedSnackbars","useDispatch","React","open","setOpen","handleClose","reason","Snackbar","autoHideDuration","onClose","severity","Header","Button","size","color","changedLocale","Selectcountry","onaboutCountry","selected","disabled","hidden","CodeCountries","marginTop","LinearDeterminate","completed","setCompleted","useEffect","timer","setInterval","oldCompleted","diff","Math","random","min","clearInterval","LinearProgress","App","useSelector","store","country","intiallocal","setLocal","messages_ru","messages_en","localStorage","getItem","e","newADD","filter","dataItems","target","shortNamecountryEL","el","params","locale","messages","setItem","bottom","onsearchShortNameTC","length","onsearchCodeCountryTC","currencies","onsearchCurrenciesCountryTC","Boolean","window","location","hostname","match","rootReducer","combineReducers","state","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa668f28.chunk.js","sourcesContent":["\r\n import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n     baseURL: \"https://restcountries.eu/rest/v2/\",\r\n })\r\n\r\nexport  const api={\r\n\r\n save: {},\r\n\r\n _get(path) {\r\n     if (this.save[path]) return Promise.resolve(this.save[path]);\r\n\r\n     return instance.get(path)\r\n         .then(res => {\r\n             this.save[path] = res.data;\r\n             return res.data\r\n         })\r\n         .catch(error => {\r\n             console.error(error)\r\n             throw new Error(\"error server\")\r\n         })\r\n },\r\n    getCountryFullName(fullName) {\r\n     return this._get(`name/${fullName}?fullText=true`)\r\n },\r\n    getCountryShortName(shortName) {\r\n     return this._get(`name/${shortName}`)\r\n },\r\n    getCountryCurrency(currencyCode) {\r\n     return this._get(`currency/${currencyCode}`)\r\n },\r\n    getCountryCode(code){\r\n     return this._get(`alpha/${code}`)\r\n },\r\n    getCountryALL(){\r\n     return this._get(`all`)\r\n }\r\n }\r\n","import {\r\n    ERROR_MESSAGE,\r\n    GET_ABOUTCOUNTRY,\r\n    GET_CODECOUNTRY,\r\n    GET_COUNTRYALL, GET_CURRENCIESCOUNTRY,\r\n    GET_FULLNAMECOUNTRY,\r\n    GET_SHORTNAMECOUNTRY, LOADING_STATUS\r\n} from \"./CountryReducer\";\r\n\r\nexport const action = {\r\n    getPhotoAC: (countryAll) => ({type: GET_COUNTRYALL, countryAll}),\r\n    getShortNameAC: (shortNamecountry) => ({type: GET_SHORTNAMECOUNTRY, shortNamecountry}),\r\n    getFullNameAC: (fullNamecountry) => ({type: GET_FULLNAMECOUNTRY, fullNamecountry}),\r\n    getCodeCountryAC: (codeCountry) => ({type: GET_CODECOUNTRY, codeCountry}),\r\n    onaboutCountryAC: (newcountry) => ({type: GET_ABOUTCOUNTRY, newcountry}),\r\n    getCurrenciesCountryAC: (currenciesCountry) => ({type: GET_CURRENCIESCOUNTRY, currenciesCountry}),\r\n    loadAC: (loading) => ({type: LOADING_STATUS, loading}),\r\n    errorAlertSuccess: (error) => ({type: ERROR_MESSAGE, error})\r\n}\r\n","import {api} from \"../dall/api\";\r\nimport {action} from \"./Action\";\r\n\r\nexport const GET_COUNTRYALL = 'CountryReducer/GET_COUNTRYALL';\r\nexport const GET_SHORTNAMECOUNTRY = 'CountryReducer/GET_SHORTNAMECOUNTRY';\r\nexport const GET_FULLNAMECOUNTRY = 'CountryReducer/GET_FULLNAMECOUNTRY';\r\nexport const GET_CODECOUNTRY = 'CountryReducer/GET_CODECOUNTRY';\r\nexport const GET_CURRENCIESCOUNTRY = 'CountryReducer/GET_CURRENCIESCOUNTRY';\r\nexport const GET_ABOUTCOUNTRY = 'CountryReducer/GET_ABOUTCOUNTRY';\r\nexport const LOADING_STATUS = 'CountryReducer/LOADING_STATUS';\r\nexport const ERROR_MESSAGE = 'CountryReducer/ERROR_MESSAGE';\r\n\r\n\r\nconst initialState = {\r\n    countryAll: [],\r\n    shortNamecountry:[],\r\n    fullNamecountry:[],\r\n    codeCountry:[],\r\n    currenciesCountry:[],\r\n    loading: false,\r\n    dataCountry:[],\r\n    error:''\r\n};\r\nexport const CountryReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case  GET_COUNTRYALL:\r\n            return {\r\n                ...state,\r\n                countryAll: action.countryAll\r\n            };\r\n        case   GET_SHORTNAMECOUNTRY:\r\n            return {\r\n                ...state,\r\n                shortNamecountry: action.shortNamecountry,\r\n                dataCountry: [],\r\n                fullNamecountry:[],\r\n                codeCountry:[],\r\n                currenciesCountry:[],\r\n                error:''\r\n            };\r\n        case   GET_FULLNAMECOUNTRY:\r\n            return {\r\n                ...state,\r\n                dataCountry: action.fullNamecountry,\r\n                codeCountry:[],\r\n                currenciesCountry:[],\r\n                shortNamecountry:[],\r\n                error:''\r\n            };\r\n        case   GET_CODECOUNTRY:\r\n            return {\r\n                ...state,\r\n\r\n                dataCountry: [action.codeCountry],\r\n                currenciesCountry:[],\r\n                shortNamecountry:[],\r\n                fullNamecountry:[],\r\n                error:''\r\n            };\r\n        case   GET_CURRENCIESCOUNTRY:\r\n            return {\r\n                ...state,\r\n                dataCountry: action.currenciesCountry,\r\n                shortNamecountry:[],\r\n                fullNamecountry:[],\r\n                codeCountry:[],\r\n                error:''\r\n            };\r\n        case   GET_ABOUTCOUNTRY:\r\n            return {\r\n                ...state,\r\n                dataCountry: action.newcountry,\r\n                shortNamecountry:[],\r\n                fullNamecountry:[],\r\n                codeCountry:[],\r\n                error:''\r\n            };\r\n        case LOADING_STATUS: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n            }\r\n\r\n        }\r\n        case ERROR_MESSAGE : {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                dataCountry: [],\r\n                shortNamecountry:[],\r\n                fullNamecountry:[],\r\n                codeCountry:[],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst tryCatch = async (act, dispatch) => {\r\n    try {\r\n        dispatch(action.loadAC(true))\r\n        await act();\r\n    } catch (error) {\r\n        dispatch(action.errorAlertSuccess(error.message))\r\n    } finally {\r\n        dispatch(action.loadAC(false))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  const  getCountryTC=()=>(dispatch)=>{\r\n    tryCatch(async ()=>{\r\n        let data = await api.getCountryALL()\r\n        dispatch(action.getPhotoAC(data))\r\n    },dispatch)\r\n}\r\n\r\nexport const onsearchShortNameTC = (shortName) => async (dispatch) => {\r\n    tryCatch(async ()=>{\r\n        let data = await api.getCountryShortName(shortName)\r\n        dispatch(action.getShortNameAC(data))\r\n    },dispatch)\r\n}\r\n\r\n\r\nexport const onsearchFullNameTC = (FullName) => async (dispatch) => {\r\n    tryCatch(async ()=>{\r\n        let data = await api.getCountryFullName(FullName)\r\n        dispatch(action.getFullNameAC(data))\r\n    },dispatch)\r\n\r\n}\r\n\r\n\r\nexport const onsearchCodeCountryTC = (codeCountry) => async (dispatch) => {\r\n\r\n    tryCatch(async ()=>{\r\n        let data = await api.getCountryCode(codeCountry)\r\n        dispatch(action.getCodeCountryAC(data))\r\n    },dispatch)\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const onsearchCurrenciesCountryTC = (currencies) => async (dispatch) => {\r\n\r\n    tryCatch(async ()=>{\r\n        let data = await api.getCountryCurrency(currencies)\r\n        dispatch(action.getCurrenciesCountryAC(data))\r\n    },dispatch)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const onaboutCountryTC=(newcountry)=>(dispatch)=>{\r\n    dispatch(action.onaboutCountryAC(newcountry))\r\n}\r\n\r\n\r\nexport const errorAlertTC=()=>(dispatch)=>{\r\n    dispatch(action.errorAlertSuccess(''))\r\n}\r\n\r\n\r\n\r\n","import React, {useRef, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: \"100%\",\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n\r\n}));\r\n\r\n\r\nfunction TotalInput(props) {\r\n    const [value, setValue] = useState('')\r\n    const classes = useStyles();\r\n\r\n    const textInput = useRef(null)\r\n    const changedValue = (textInput) => {\r\n\r\n        setValue(textInput.currentTarget.value)\r\n    }\r\n\r\n    const onsearch = () => {\r\n\r\n        props.onsearch(value)\r\n        setValue('')\r\n    }\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            props.onsearch(value)\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Paper className={classes.root}>\r\n\r\n                <InputBase\r\n                    className={classes.input}\r\n                    placeholder={props.placeholder}\r\n                    inputProps={{'aria-label': 'search google maps'}}\r\n                    onKeyPress={handleKeyPress}\r\n                    onChange={changedValue}\r\n                    value={value}\r\n                    ref={textInput}\r\n                />\r\n                <IconButton className={classes.iconButton} aria-label=\"search\" onClick={onsearch}>\r\n                    <SearchIcon/>\r\n                </IconButton>\r\n            </Paper>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TotalInput\r\n\r\n","// import React, {useRef, useState} from 'react';\r\n//\r\n// function ShortName(props) {\r\n//     const[value,setValue]=useState('')\r\n//    const textInput = useRef(null)\r\n//  const   changedShortName=(textInput)=>{\r\n// //debugger\r\n//    //  console.log(textInput)\r\n//         setValue(textInput.currentTarget.value)\r\n//     }\r\n//\r\n//     const searchShortName=()=>{\r\n//\r\n//         props.onsearchShortName(value)\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <div>\r\n//             <input type='text'\r\n//             onChange={changedShortName}\r\n//                    value={value}\r\n//                    ref={textInput}\r\n//                    placeholder={\"Short Name Country\"}\r\n//             />\r\n//             <button onClick={searchShortName}>search</button>\r\n//\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ShortName\r\nimport React from 'react';\r\nimport TotalInput from \"./Totalnput\";\r\nimport {useIntl} from 'react-intl';\r\n\r\n\r\nfunction ShortName(props) {\r\n    const intl = useIntl();\r\n    return (\r\n        <div>\r\n\r\n            <TotalInput placeholder={\r\n                intl.formatMessage({id: 'input.shortName'})\r\n            } onsearch={props.onsearchShortName}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShortName\r\n\r\n","import React from 'react';\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\n\r\n\r\nexport const AboutCountryLocale=(props)=> {\r\n\r\n\r\n    const value = Array.isArray(props.dataCountry[0][props.name])\r\n        ?  <>{props.dataCountry[0][props.name].map(v => props.object ? v.name : v)}</>\r\n        : props.dataCountry[0][props.name]\r\n\r\n    return (\r\n        <div className={'tablerow'}>\r\n            <FormattedMessage id={'aboutcountry.' + props.name} defaultMessage={props.defaultMessage}/>\r\n            {props.img\r\n                ? <img src={props.dataCountry[0][props.name]}/>\r\n                : <span> {value}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const AppLocale = (props)=>  {\r\n    return (\r\n        <div >\r\n            <FormattedMessage id={'app.' + props.name} defaultMessage={props.defaultMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {AboutCountryLocale} from \"./AboutCountryLocale\";\r\n\r\n\r\n\r\nexport default function   AboutCountry  (props)  {\r\n\r\n\r\n\r\n\r\n\r\n  let  rows=[\r\n        {name:'name',defaultMessage:'Country'},\r\n        {name:'capital',defaultMessage:'Capital'},\r\n        {name:'region',defaultMessage:'Region'},\r\n        {name:'subregion',defaultMessage:'Subregion'},\r\n        {name:'population',defaultMessage:'Population'},\r\n        {name:'topLevelDomain',defaultMessage:'Top level domain'},\r\n        {name:'alpha2Code',defaultMessage:'Alpha2Code'},\r\n        {name:'alpha3Code',defaultMessage:'Alpha3Code'},\r\n        {name:'languages',defaultMessage:'Languages',object:true},\r\n        {name:'borders',defaultMessage:'Borders'},\r\n        {name:'timezones',defaultMessage:'Timezones'},\r\n        {name:'nativeName',defaultMessage:'Native name'},\r\n        {name:'numericCode',defaultMessage:'Numeric code country'},\r\n        {name:'flag',defaultMessage:'Subregion',img:true},\r\n    ]\r\n\r\n   let tablesEL=rows.map(r=>  <AboutCountryLocale  name={r.name}\r\n                                                   key={r.index}\r\n                                                  defaultMessage={r.defaultMessage}\r\n                                                  dataCountry={props.dataCountry}\r\n                                                  object={r.object}\r\n                                                  img={r.img}\r\n\r\n   />)\r\n\r\n    return (\r\n        <div>\r\n            {tablesEL}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport TotalInput from \"./Totalnput\";\r\nimport {useIntl } from 'react-intl';\r\nfunction FullName(props) {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n\r\n        <div>\r\n            <TotalInput placeholder={\r\n                intl.formatMessage({ id: 'input.fullName' })\r\n\r\n            } onsearch={props.onsearchFullName}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FullName\r\n\r\n","import React from 'react';\r\nimport TotalInput from \"./Totalnput\";\r\nimport {useIntl} from \"react-intl\";\r\n\r\nfunction CodeCountry(props) {\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <div>\r\n           <TotalInput placeholder={\r\n               intl.formatMessage({ id: 'input.codeCountry' })\r\n           } onsearch={props.onsearchCodeCountry}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  CodeCountry\r\n","import React from 'react';\r\nimport TotalInput from \"./Totalnput\";\r\nimport {useIntl} from \"react-intl\";\r\n\r\nfunction CurrenciesCountry(props) {\r\n    const intl = useIntl();\r\n    return (\r\n        <div>\r\n            <TotalInput placeholder={\r\n                intl.formatMessage({id: 'input.currienciesCountry'})\r\n            } onsearch={props.onsearchCurrenciesCountry}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrenciesCountry\r\n\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const particlesOption = {\r\n    particles: {\r\n        number: {\r\n            value: 155,\r\n            density: {\r\n                enable: true,\r\n                value_area: 600\r\n            }\r\n        },\r\n        line_linked: { /* связующие линии */\r\n            \"enable\": true, /* включено/выключено */\r\n            \"distance\": 150, /* расстояние между частицами, при котором проявляется линия */\r\n            \"color\": \"#646464\", /* цвет */\r\n            \"opacity\": 0.6, /* прозрачность */\r\n            \"width\": 0.8 /* ширина */\r\n        },\r\n    },\r\n    interactivity: { /* интерактивность */\r\n        detect_on: \"canvas\", /* реакция на событие мыши в окне (window) или в объекте (canvas) */\r\n        /* события */\r\n        events: {\r\n            \"onhover\": { /* по наведению */\r\n                \"enable\": true, /* включено/выключено */\r\n                \"mode\": \"repulse\" /* repulse (отталкивание частиц), grab (соединение связующих линий), bubble ('пузырение' частиц) */\r\n            },\r\n            \"onclick\": { /* по клику */\r\n                \"enable\": true, /* включено/выключено */\r\n                \"mode\": \"push\" /* push (добавление новых частиц), remove (удаление частиц),\r\n                     bubble (временное изменение прозрачности частиц на непрозрачное и увеличение их в размере), repulse (отталкивание частиц) */\r\n            }\r\n        },\r\n\r\n        \"modes\": { /* параметры видов событий */\r\n            \"bubble\": { /* при onhover или onclick: mode: bubble */\r\n                \"distance\": 100, /* расстояние от мышки до частиц, при котором происходит эффект */\r\n                \"size\": 40, /* размер увеличения частиц */\r\n                \"duration\": 2, /* продолжительность эффекта в секундах при клике */\r\n                \"opacity\": 0.2, /* максимальная прозрачность */\r\n                \"speed\": 20 /* скорость эффекта */\r\n            },\r\n            \"repulse\": { /* при onhover или onclick: mode: repulse */\r\n                \"distance\": 80, /* расстояние отталкивания */\r\n                \"duration\": 1 /* продолжительность отталкивания */\r\n            },\r\n            \"push\": { /* при onclick: mode: push */\r\n                \"particles_nb\": 4 /* количество добавляемых частиц */\r\n            },\r\n        }\r\n\r\n    }\r\n\r\n};\r\n","import React from 'react';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {errorAlertTC} from \"../bll/CountryReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n        dispatch(errorAlertTC())\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert severity=\"error\" onClose={handleClose}>{props.error}</Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","// import React, {useRef, useState} from 'react';\r\n//\r\n// function ShortName(props) {\r\n//     const[value,setValue]=useState('')\r\n//    const textInput = useRef(null)\r\n//  const   changedShortName=(textInput)=>{\r\n// //debugger\r\n//    //  console.log(textInput)\r\n//         setValue(textInput.currentTarget.value)\r\n//     }\r\n//\r\n//     const searchShortName=()=>{\r\n//\r\n//         props.onsearchShortName(value)\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <div>\r\n//             <input type='text'\r\n//             onChange={changedShortName}\r\n//                    value={value}\r\n//                    ref={textInput}\r\n//                    placeholder={\"Short Name Country\"}\r\n//             />\r\n//             <button onClick={searchShortName}>search</button>\r\n//\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ShortName\r\nimport React from 'react';\r\nimport {AppLocale} from \"./AboutCountryLocale\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useStyles} from \"../particlesOption\";\r\n\r\n\r\nfunction Header(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className='languge'>\r\n                <AppLocale name={'language'} defaultMessage={'Language'}/>\r\n            </div>\r\n            <div className='header_btn'>\r\n                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.margin}\r\n                        onClick={props.changedLocale}>\r\n                    en\r\n                </Button>\r\n                <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.margin}\r\n                        onClick={props.changedLocale}>\r\n                    ru\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header\r\n\r\n","// import React, {useRef, useState} from 'react';\r\n//\r\n// function ShortName(props) {\r\n//     const[value,setValue]=useState('')\r\n//    const textInput = useRef(null)\r\n//  const   changedShortName=(textInput)=>{\r\n// //debugger\r\n//    //  console.log(textInput)\r\n//         setValue(textInput.currentTarget.value)\r\n//     }\r\n//\r\n//     const searchShortName=()=>{\r\n//\r\n//         props.onsearchShortName(value)\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <div>\r\n//             <input type='text'\r\n//             onChange={changedShortName}\r\n//                    value={value}\r\n//                    ref={textInput}\r\n//                    placeholder={\"Short Name Country\"}\r\n//             />\r\n//             <button onClick={searchShortName}>search</button>\r\n//\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ShortName\r\nimport React from 'react';\r\nimport {AppLocale} from \"./AboutCountryLocale\";\r\nimport {useIntl} from \"react-intl\";\r\n\r\n\r\nfunction Selectcountry(props) {\r\n\r\n    const intl = useIntl();\r\n    return (\r\n        <div className='item'>\r\n            <AppLocale name={'allCountries'} defaultMessage={'ALLCOUNTRIES'}/>\r\n            <div>\r\n                <select className=\"select\" onChange={props.onaboutCountry}>\r\n                    <option value=\"none\" selected disabled hidden>\r\n                        {intl.formatMessage({id: 'app.selectCountries'})}\r\n                    </option>\r\n                    {props.CodeCountries}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (Selectcountry)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function LinearDeterminate() {\r\n    const classes = useStyles();\r\n    const [completed, setCompleted] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function progress() {\r\n            setCompleted((oldCompleted) => {\r\n                if (oldCompleted === 100) {\r\n                    return 0;\r\n                }\r\n                const diff = Math.random() * 10;\r\n                return Math.min(oldCompleted + diff, 100);\r\n            });\r\n        }\r\n\r\n        const timer = setInterval(progress, 500);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgress variant=\"determinate\" value={completed} />\r\n            <LinearProgress variant=\"determinate\" value={completed} color=\"secondary\" />\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    getCountryTC, onaboutCountryTC,\n    onsearchCodeCountryTC,\n    onsearchCurrenciesCountryTC,\n    onsearchFullNameTC,\n    onsearchShortNameTC\n} from \"./bll/CountryReducer\";\nimport ShortName from \"./ui/ShortName\";\nimport AboutCountry from \"./ui/AboutCountry\";\nimport FullName from \"./ui/FullName\";\nimport CodeCountry from \"./ui/CodeCountry\";\nimport CurrenciesCountry from \"./ui/CurrenciesCountry\";\nimport messages_ru from \"./i18/ru\";\nimport messages_en from \"./i18/en\";\nimport {IntlProvider} from \"react-intl\";\nimport {AppLocale} from \"./ui/AboutCountryLocale\";\nimport {Fade} from \"react-reveal\";\nimport Particles from \"react-particles-js\";\nimport {particlesOption} from \"./particlesOption\";\nimport ErrorMessage from \"./ui/ErrorMessage\";\nimport Header from \"./ui/Header\";\nimport Selectcountry from \"./ui/Selectcountry\";\nimport Progress from \"./ui/Progress\";\n\nfunction App() {\n\n    const dispatch = useDispatch();\n    const {countryAll, shortNamecountry, dataCountry, loading, error} = useSelector((store) => store.country);\n    const [intiallocal, setLocal] = useState('en')\n    const [message, setMessage] = useState({'ru': messages_ru, 'en': messages_en})\n\n\n    useEffect(() => {\n        setLocal(localStorage.getItem('locale'))\n        dispatch(getCountryTC());\n\n    }, []);\n\n    const onsearchShortName = (shortName) => {\n        dispatch(onsearchShortNameTC(shortName))\n    }\n    const onsearchFullName = (fullName) => {\n        dispatch(onsearchFullNameTC(fullName))\n\n    }\n    const onsearchCodeCountry = (codeCountry) => {\n        dispatch(onsearchCodeCountryTC(codeCountry))\n    }\n\n    const onsearchCurrenciesCountry = (currencies) => {\n        dispatch(onsearchCurrenciesCountryTC(currencies))\n    }\n\n    const changedLocale = () => {\n        const locale = intiallocal === 'en' ? 'ru' : 'en'\n\n        setLocal(locale)\n        localStorage.setItem('locale', locale);\n    };\n\n    const onaboutCountry = (e) => {\n        let newADD = (countryAll.filter(dataItems => {\n            if (dataItems.name === e.target.value)\n                return dataItems\n        }))\n        dispatch(onaboutCountryTC(newADD))\n    }\n\n    const shortNamecountryEL = shortNamecountry.map(el => <option key={el.id}>   {el.name}    </option>);\n\n    const CodeCountries = countryAll.map(el => <option key={el.id}>  {el.name} </option>);\n    return (\n        <div className=\"App\">\n            <div className='countries'>\n                <Particles className='particl' params={particlesOption}/>\n                <IntlProvider locale={intiallocal} messages={message[intiallocal]}>\n                    <Header changedLocale={changedLocale}/>\n                    {error && <ErrorMessage error={error}/>}\n                    {loading && <Progress />}\n                    <section className='about'>\n                        <div className='container'>\n\n                            <Fade bottom>\n                                <div className='items'>\n                                    <div className='item'>\n                                        <AppLocale name={'shortName'} defaultMessage={'SHORT NAME COUNTRY'}/>\n                                        <ShortName onsearchShortName={onsearchShortName}/>\n                                    </div>\n                                    {shortNamecountry.length !== 0 &&\n                                    <Selectcountry onaboutCountry={onaboutCountry} CodeCountries={shortNamecountryEL}/>\n                                    }\n                                    <div className='item'>\n                                        <AppLocale name={'fullName'} defaultMessage={'FULL NAME COUNTRY'}/>\n                                        <div>\n                                            <FullName onsearchFullName={onsearchFullName}/>\n                                        </div>\n                                    </div>\n                                    <div className='item'>\n                                        <AppLocale name={'codeCountry'} defaultMessage={'CODE COUNTRY'}/>\n                                        <div>\n                                            <CodeCountry onsearchCodeCountry={onsearchCodeCountry}/>\n                                        </div>\n                                    </div>\n                                    <div className='item'>\n                                        <AppLocale name={'currienciesCountry'} defaultMessage={'CURRIENCIES COUNTRY'}/>\n                                        <div>\n                                            <CurrenciesCountry onsearchCurrenciesCountry={onsearchCurrenciesCountry}/>\n                                        </div>\n                                    </div>\n                                    <Selectcountry onaboutCountry={onaboutCountry} CodeCountries={CodeCountries}/>\n                                </div>\n                                <div className='AboutCountry'>\n                                    {dataCountry.length !== 0 &&\n                                    <AboutCountry dataCountry={dataCountry}/>\n                                    }\n                                </div>\n                            </Fade>\n                        </div>\n                    </section>\n                </IntlProvider>\n            </div>\n        </div>\n    );\n}\n\nexport default (App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {CountryReducer} from \"./CountryReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    country: CountryReducer\r\n\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./bll/store\";\n\n\nReactDOM.render(\n        <Provider store={store}>\n            <App/>\n        </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}