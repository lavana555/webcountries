{"version":3,"sources":["dall/api.js","bll/Action.js","bll/CountryReducer.js","ui/Totalnput.js","ui/ShortName.js","ui/AboutCountryLocale.js","ui/AboutCountry.js","ui/FullName.js","ui/CodeCountry.js","ui/CurrenciesCountry.js","particlesOption.js","App.js","serviceWorker.js","bll/store.js","i18n.js","index.js"],"names":["instance","axios","baseURL","api","get","fullName","shortName","currencyCode","code","action","countryAll","type","GET_COUNTRYALL","shortNamecountry","GET_SHORTNAMECOUNTRY","fullNamecountry","GET_FULLNAMECOUNTRY","codeCountry","GET_CODECOUNTRY","newcountry","GET_ABOUTCOUNTRY","currenciesCountry","GET_CURRENCIESCOUNTRY","loading","LOADING_STATUS","error","ERROR_MESSAGE","initialState","dataCountry","useStyles","makeStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","margin","TotalInput","props","useState","value","setValue","classes","textInput","useRef","Paper","component","className","InputBase","placeholder","inputProps","onChange","currentTarget","ref","IconButton","aria-label","onClick","onsearch","ShortName","onsearchShortName","AboutCountryLocale","Array","isArray","name","map","v","object","id","defaultMessage","img","src","AppLocale","AboutCountry","tablesEL","r","FullName","onsearchFullName","CodeCountry","onsearchCodeCountry","CurrenciesCountry","onsearchCurrenciesCountry","extendedIcon","marginRight","particlesOption","particles","number","density","enable","value_area","line_linked","interactivity","detect_on","events","App","dispatch","useDispatch","useSelector","store","country","intiallocal","setLocal","messages_ru","messages_en","message","useEffect","localStorage","getItem","a","res","data","changedLocale","locale","setItem","onaboutCountry","e","newADD","filter","dataItems","target","shortNamecountryEL","el","key","CodeCountries","params","messages","left","Button","variant","size","color","animation","background","style","bottom","onsearchShortNameTC","length","onsearchCodeCountryTC","currencies","onsearchCurrenciesCountryTC","Boolean","window","location","hostname","match","rootReducer","combineReducers","state","createStore","applyMiddleware","thunkMiddleware","i18n","use","initReactI18next","init","resources","en","translation","lng","keySeparator","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.fd5cf28f.chunk.js","sourcesContent":["\r\n import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n     baseURL: \"https://restcountries.eu/rest/v2/\",\r\n })\r\n export const api={\r\n     getCountryALL(){\r\n         return  instance.get(`all`)\r\n     },\r\n    getCountryFullName(fullName) {\r\n         return instance.get(`name/${fullName}?fullText=true`)\r\n     },\r\n    getCountryShortName(shortName) {\r\n         return  instance.get(`name/${shortName}`)\r\n     },\r\n    getCountryCurrency(currencyCode) {\r\n         return  instance.get(`currency/${currencyCode}`)\r\n     },\r\n    getCountryCode(code){\r\n         return  instance.get(`alpha/${code}`)\r\n     }\r\n\r\n}\r\n\r\n\r\n","import {\r\n    ERROR_MESSAGE,\r\n    GET_ABOUTCOUNTRY,\r\n    GET_CODECOUNTRY,\r\n    GET_COUNTRYALL, GET_CURRENCIESCOUNTRY,\r\n    GET_FULLNAMECOUNTRY,\r\n    GET_SHORTNAMECOUNTRY, LOADING_STATUS\r\n} from \"./CountryReducer\";\r\n\r\nexport const action= {\r\n     getPhotoAC : (countryAll) => ({type: GET_COUNTRYALL, countryAll}),\r\n\r\n getShortNameAC : (shortNamecountry) => ({type: GET_SHORTNAMECOUNTRY, shortNamecountry}),\r\n\r\n getFullNameAC : (fullNamecountry) => ({type: GET_FULLNAMECOUNTRY, fullNamecountry}),\r\n\r\n getCodeCountryAC : (codeCountry) => ({type: GET_CODECOUNTRY, codeCountry}),\r\n onaboutCountryAC : (newcountry) => ({type: GET_ABOUTCOUNTRY, newcountry}),\r\n\r\n getCurrenciesCountryAC : (currenciesCountry) => ({type: GET_CURRENCIESCOUNTRY, currenciesCountry}),\r\n\r\n\r\nloadAC : (loading) => ({type: LOADING_STATUS, loading}),\r\n\r\n errorAlertSuccess : (error) => ({type: ERROR_MESSAGE, error})\r\n\r\n}\r\n","import {api} from \"../dall/api\";\r\nimport {action} from \"./Action\";\r\n\r\nexport const GET_COUNTRYALL = 'CountryReducer/GET_COUNTRYALL';\r\nexport const GET_SHORTNAMECOUNTRY = 'CountryReducer/GET_SHORTNAMECOUNTRY';\r\nexport const GET_FULLNAMECOUNTRY = 'CountryReducer/GET_FULLNAMECOUNTRY';\r\nexport const GET_CODECOUNTRY = 'CountryReducer/GET_CODECOUNTRY';\r\nexport const GET_CURRENCIESCOUNTRY = 'CountryReducer/GET_CURRENCIESCOUNTRY';\r\nexport const GET_ABOUTCOUNTRY = 'CountryReducer/GET_ABOUTCOUNTRY';\r\nexport const LOADING_STATUS = 'listPhotoReducer/LOADING_STATUS';\r\nexport const ERROR_MESSAGE = 'listPhotoReducer/ERROR_MESSAGE';\r\n\r\n\r\nconst initialState = {\r\n    countryAll: [],\r\n    shortNamecountry:[],\r\n    fullNamecountry:[],\r\n    codeCountry:[],\r\n    currenciesCountry:[],\r\n    loading: false,\r\n    dataCountry:[],\r\n    error:''\r\n};\r\nexport const CountryReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case  GET_COUNTRYALL:\r\n            return {\r\n                ...state,\r\n                countryAll: action.countryAll\r\n            };\r\n        case   GET_SHORTNAMECOUNTRY:\r\n            return {\r\n                ...state,\r\n                shortNamecountry: action.shortNamecountry,\r\n                fullNamecountry:[],\r\n                codeCountry:[],\r\n                currenciesCountry:[],\r\n                error:''\r\n            };\r\n        case   GET_FULLNAMECOUNTRY:\r\n            return {\r\n                ...state,\r\n                dataCountry: action.fullNamecountry,\r\n                codeCountry:[],\r\n                currenciesCountry:[],\r\n                shortNamecountry:[],\r\n                error:''\r\n            };\r\n        case   GET_CODECOUNTRY:\r\n            return {\r\n                ...state,\r\n\r\n                dataCountry: [action.codeCountry],\r\n                currenciesCountry:[],\r\n                shortNamecountry:[],\r\n                fullNamecountry:[],\r\n                error:''\r\n            };\r\n        case   GET_CURRENCIESCOUNTRY:\r\n            return {\r\n                ...state,\r\n                dataCountry: action.currenciesCountry,\r\n                shortNamecountry:[],\r\n                fullNamecountry:[],\r\n                codeCountry:[],\r\n                error:''\r\n            };\r\n        case   GET_ABOUTCOUNTRY:\r\n            return {\r\n                ...state,\r\n                dataCountry: action.newcountry,\r\n                shortNamecountry:[],\r\n                fullNamecountry:[],\r\n                codeCountry:[],\r\n                error:''\r\n            };\r\n        case LOADING_STATUS: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n            }\r\n\r\n        }\r\n        case ERROR_MESSAGE : {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const getCountryTC = () => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch(action.loadAC(true))\r\n        let res = await api.getCountryALL()\r\n        dispatch(action.getPhotoAC(res.data))\r\n        dispatch(action.loadAC(false))\r\n    } catch (error) {\r\n        dispatch(action.loadAC(false))\r\n        dispatch(action.errorAlertSuccess(error))\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const onaboutCountryTC=(newcountry)=>(dispatch)=>{\r\n    dispatch(action.onaboutCountryAC(newcountry))\r\n}\r\n\r\n\r\n\r\n\r\nexport const onsearchShortNameTC = (shortName) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch(action.loadAC(true))\r\n        let res = await api.getCountryShortName(shortName)\r\n        dispatch(action.getShortNameAC(res.data))\r\n        dispatch(action.loadAC(false))\r\n    } catch (error) {\r\n\r\n        dispatch(action.loadAC(false))\r\n        dispatch(action.errorAlertSuccess(error.message))\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const onsearchFullNameTC = (FullName) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch(action.loadAC(true))\r\n        let res = await api.getCountryFullName(FullName)\r\n        dispatch(action.getFullNameAC(res.data))\r\n        dispatch(action.loadAC(false))\r\n    } catch (error) {\r\n        dispatch(action.loadAC(false))\r\n        dispatch(action.errorAlertSuccess(error.message))\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const onsearchCodeCountryTC = (codeCountry) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch(action.loadAC(true))\r\n        let res = await api.getCountryCode(codeCountry)\r\n        dispatch(action.getCodeCountryAC(res.data))\r\n        dispatch(action.loadAC(false))\r\n    } catch (error) {\r\n        dispatch(action.loadAC(false))\r\n        dispatch(action.errorAlertSuccess(error.message))\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const onsearchCurrenciesCountryTC = (currencies) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch(action.loadAC(true))\r\n        let res = await api.getCountryCurrency(currencies)\r\n        dispatch(action.getCurrenciesCountryAC(res.data))\r\n        dispatch(action.loadAC(false))\r\n    } catch (error) {\r\n        dispatch(action.loadAC(false))\r\n        dispatch(action.errorAlertSuccess(error.message))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {useRef, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nfunction TotalInput(props) {\r\n    const[value,setValue]=useState('')\r\n    const classes = useStyles();\r\n\r\n    const textInput = useRef(null)\r\n    const   changedValue=(textInput)=>{\r\n\r\n        setValue(textInput.currentTarget.value)\r\n    }\r\n\r\n    const onsearch=()=>{\r\n\r\n        props.onsearch(value)\r\n        setValue('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Paper component=\"form\" className={classes.root}>\r\n                <InputBase\r\n                    className={classes.input}\r\n                    placeholder={props.placeholder}\r\n                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                    onChange={changedValue}\r\n                value={value}\r\n                       ref={textInput}\r\n                />\r\n                <IconButton  className={classes.iconButton} aria-label=\"search\" onClick={onsearch}>\r\n                    <SearchIcon  />\r\n                </IconButton>\r\n            </Paper>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  TotalInput\r\n\r\n","// import React, {useRef, useState} from 'react';\r\n//\r\n// function ShortName(props) {\r\n//     const[value,setValue]=useState('')\r\n//    const textInput = useRef(null)\r\n//  const   changedShortName=(textInput)=>{\r\n// //debugger\r\n//    //  console.log(textInput)\r\n//         setValue(textInput.currentTarget.value)\r\n//     }\r\n//\r\n//     const searchShortName=()=>{\r\n//\r\n//         props.onsearchShortName(value)\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <div>\r\n//             <input type='text'\r\n//             onChange={changedShortName}\r\n//                    value={value}\r\n//                    ref={textInput}\r\n//                    placeholder={\"Short Name Country\"}\r\n//             />\r\n//             <button onClick={searchShortName}>search</button>\r\n//\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ShortName\r\nimport React from 'react';\r\nimport TotalInput from \"./Totalnput\";\r\n\r\n\r\n\r\nfunction ShortName(props) {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <TotalInput placeholder={\"Short Name Country\"} onsearch={props.onsearchShortName}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  ShortName\r\n\r\n","import React from 'react';\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\nexport const AboutCountryLocale=(props)=> {\r\n\r\n\r\n    const value = Array.isArray(props.dataCountry[0][props.name])\r\n        ?  <>{props.dataCountry[0][props.name].map(v => props.object ? v.name : v)}</>\r\n        : props.dataCountry[0][props.name]\r\n\r\n    return (\r\n        <div className={'tablerow'}>\r\n            <FormattedMessage id={'aboutcountry.' + props.name} defaultMessage={props.defaultMessage}/>\r\n            {props.img\r\n                ? <img src={props.dataCountry[0][props.name]}/>\r\n                : <span> {value}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const AppLocale = (props)=>  {\r\n    return (\r\n        <div>\r\n            <FormattedMessage id={'app.' + props.name} defaultMessage={props.defaultMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const InputLocale = (props)=>  {\r\n    return (\r\n        <div>\r\n            <FormattedMessage id={'input.' + props.name} defaultMessage={props.defaultMessage}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {AboutCountryLocale} from \"./AboutCountryLocale\";\r\n\r\n\r\n\r\nexport default function   AboutCountry  (props)  {\r\n\r\n\r\n\r\n\r\n\r\n  let  rows=[\r\n        {name:'name',defaultMessage:'Country'},\r\n        {name:'capital',defaultMessage:'Capital'},\r\n        {name:'region',defaultMessage:'Region'},\r\n        {name:'subregion',defaultMessage:'Subregion'},\r\n        {name:'population',defaultMessage:'Population'},\r\n        {name:'topLevelDomain',defaultMessage:'Top level domain'},\r\n        {name:'alpha2Code',defaultMessage:'Alpha2Code'},\r\n        {name:'alpha3Code',defaultMessage:'Alpha3Code'},\r\n        {name:'languages',defaultMessage:'Languages',object:true},\r\n        {name:'borders',defaultMessage:'Borders'},\r\n        {name:'timezones',defaultMessage:'Timezones'},\r\n        {name:'nativeName',defaultMessage:'Native name'},\r\n        {name:'numericCode',defaultMessage:'Numeric code country'},\r\n        {name:'flag',defaultMessage:'Subregion',img:true},\r\n    ]\r\n\r\n   let tablesEL=rows.map(r=>  <AboutCountryLocale name={r.name}\r\n                                                  defaultMessage={r.defaultMessage}\r\n                                                  dataCountry={props.dataCountry}\r\n                                                  object={r.object}\r\n                                                  img={r.img}\r\n\r\n   />)\r\n\r\n    return (\r\n        <div>\r\n            {tablesEL}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport TotalInput from \"./Totalnput\";\r\nfunction FullName(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TotalInput placeholder={\"Full Name Country\"} onsearch={props.onsearchFullName}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FullName\r\n\r\n","import React from 'react';\r\nimport TotalInput from \"./Totalnput\";\r\n\r\nfunction CodeCountry(props) {\r\n\r\n    return (\r\n        <div>\r\n           <TotalInput placeholder={\"Code Country\"} onsearch={props.onsearchCodeCountry}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  CodeCountry\r\n","import React from 'react';\r\nimport TotalInput from \"./Totalnput\";\r\n\r\nfunction CurrenciesCountry(props) {\r\n    return (\r\n        <div>\r\n            <TotalInput placeholder={\"Curriencies Country\"} onsearch={props.onsearchCurrenciesCountry}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrenciesCountry\r\n\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const particlesOption = {\r\n    particles: {\r\n        number: {\r\n            value: 155,\r\n            density: {\r\n                enable: true,\r\n                value_area: 600\r\n            }\r\n        },\r\n        line_linked: { /* связующие линии */\r\n            \"enable\": true, /* включено/выключено */\r\n            \"distance\": 150, /* расстояние между частицами, при котором проявляется линия */\r\n            \"color\": \"#646464\", /* цвет */\r\n            \"opacity\": 0.6, /* прозрачность */\r\n            \"width\": 0.8 /* ширина */\r\n        },\r\n    },\r\n    interactivity: { /* интерактивность */\r\n        detect_on: \"canvas\", /* реакция на событие мыши в окне (window) или в объекте (canvas) */\r\n        /* события */\r\n        events: {\r\n            \"onhover\": { /* по наведению */\r\n                \"enable\": true, /* включено/выключено */\r\n                \"mode\": \"repulse\" /* repulse (отталкивание частиц), grab (соединение связующих линий), bubble ('пузырение' частиц) */\r\n            },\r\n            \"onclick\": { /* по клику */\r\n                \"enable\": true, /* включено/выключено */\r\n                \"mode\": \"push\" /* push (добавление новых частиц), remove (удаление частиц),\r\n                     bubble (временное изменение прозрачности частиц на непрозрачное и увеличение их в размере), repulse (отталкивание частиц) */\r\n            }\r\n        },\r\n\r\n        \"modes\": { /* параметры видов событий */\r\n            \"bubble\": { /* при onhover или onclick: mode: bubble */\r\n                \"distance\": 100, /* расстояние от мышки до частиц, при котором происходит эффект */\r\n                \"size\": 40, /* размер увеличения частиц */\r\n                \"duration\": 2, /* продолжительность эффекта в секундах при клике */\r\n                \"opacity\": 0.2, /* максимальная прозрачность */\r\n                \"speed\": 20 /* скорость эффекта */\r\n            },\r\n            \"repulse\": { /* при onhover или onclick: mode: repulse */\r\n                \"distance\": 80, /* расстояние отталкивания */\r\n                \"duration\": 1 /* продолжительность отталкивания */\r\n            },\r\n            \"push\": { /* при onclick: mode: push */\r\n                \"particles_nb\": 4 /* количество добавляемых частиц */\r\n            },\r\n        }\r\n\r\n    }\r\n\r\n};\r\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    getCountryTC, onaboutCountryTC,\n    onsearchCodeCountryTC,\n    onsearchCurrenciesCountryTC,\n    onsearchFullNameTC,\n    onsearchShortNameTC\n} from \"./bll/CountryReducer\";\nimport ShortName from \"./ui/ShortName\";\nimport AboutCountry from \"./ui/AboutCountry\";\nimport FullName from \"./ui/FullName\";\nimport CodeCountry from \"./ui/CodeCountry\";\nimport CurrenciesCountry from \"./ui/CurrenciesCountry\";\nimport messages_ru from \"./i18/ru\";\nimport messages_en from \"./i18/en\";\nimport {IntlProvider} from \"react-intl\";\nimport {Planets} from 'react-preloaders';\nimport {AppLocale} from \"./ui/AboutCountryLocale\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Flip from 'react-reveal/Flip';\nimport {Fade, Slide} from \"react-reveal\";\nimport Particles from \"react-particles-js\";\nimport {particlesOption, useStyles} from \"./particlesOption\";\n\n\nfunction App() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const {countryAll, shortNamecountry, dataCountry, loading, error} = useSelector((store) => store.country);\n    const [intiallocal, setLocal] = useState('en')\n    const [message, setMessage] = useState({'ru': messages_ru, 'en': messages_en})\n\n\n    useEffect(() => {\n        setLocal(localStorage.getItem('locale'))\n        dispatch(getCountryTC());\n\n    }, []);\n\n    const onsearchShortName = (shortName) => {\n        dispatch(onsearchShortNameTC(shortName))\n    }\n    const onsearchFullName = (fullName) => {\n        dispatch(onsearchFullNameTC(fullName))\n\n    }\n    const onsearchCodeCountry = (codeCountry) => {\n        dispatch(onsearchCodeCountryTC(codeCountry))\n    }\n\n    const onsearchCurrenciesCountry = (currencies) => {\n        dispatch(onsearchCurrenciesCountryTC(currencies))\n    }\n\n    const changedLocale = () => {\n        const locale = intiallocal === 'en' ? 'ru' : 'en'\n\n        setLocal(locale)\n        localStorage.setItem('locale', locale);\n    };\n\n\n    const onaboutCountry = (e) => {\n        let newADD = (countryAll.filter(dataItems => {\n            if (dataItems.name === e.target.value)\n                return dataItems\n        }))\n        dispatch(onaboutCountryTC(newADD))\n    }\n\n    const shortNamecountryEL = shortNamecountry.map(el => <option key={el.id}>   {el.name}    </option>);\n\n    const CodeCountries = countryAll.map(el => <option key={el.id}>  {el.name} </option>);\n    return (\n        <div className=\"App\">\n            <Particles className='particl' params={particlesOption}/>\n            <IntlProvider locale={intiallocal} messages={message[intiallocal]}>\n\n                <div className='header'>\n                    <Flip left>\n                        <div className='languge'>\n\n                            <AppLocale name={'language'} defaultMessage={'Language'}/>\n                        </div>\n                        <div className='header_btn'>\n\n                            <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.margin}\n                                    onClick={changedLocale}>\n                                en\n                            </Button>\n                            <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.margin}\n                                    onClick={changedLocale} onClick={changedLocale}>\n                                ru\n                            </Button>\n                        </div>\n                    </Flip>\n                </div>\n                {loading ?\n                    <Planets animation=\"slide-down\" background=\"#bff2bf\"/>\n                    : null}\n                {error ? <div style={{color: \"red\"}}>{error}</div> : null}\n                <section className='about'>\n                    <div className='container'>\n                        <Fade bottom>\n                            <div className='items'>\n\n                                <div className='item'>\n                                    <AppLocale name={'shortName'} defaultMessage={'SHORT NAME COUNTRY'}/>\n                                    <ShortName onsearchShortName={onsearchShortName}/>\n                                </div>\n                                <div className='item'>\n                                    {shortNamecountry.length != 0 &&\n                                    <div>\n                                        <select className=\"select\" onChange={onaboutCountry}>\n                                            {shortNamecountryEL}\n                                        </select>\n                                    </div>\n                                    }\n                                </div>\n                                <div className='item'>\n                                    <AppLocale name={'fullName'} defaultMessage={'FULL NAME COUNTRY'}/>\n                                    <div>\n                                        <FullName onsearchFullName={onsearchFullName}/>\n                                    </div>\n                                </div>\n                                <div className='item'>\n                                    <AppLocale name={'codeCountry'} defaultMessage={'CODE COUNTRY'}/>\n                                    <div>\n                                        <CodeCountry onsearchCodeCountry={onsearchCodeCountry}/>\n                                    </div>\n                                </div>\n                                <div className='item'>\n                                    <AppLocale name={'currienciesCountry'} defaultMessage={'CURRIENCIES COUNTRY'}/>\n                                    <div>\n                                        <CurrenciesCountry onsearchCurrenciesCountry={onsearchCurrenciesCountry}/>\n                                    </div>\n                                </div>\n                                <div className='item'>\n                                    <AppLocale name={'allCountries'} defaultMessage={'ALLCOUNTRIES'}/>\n                                    <div>\n                                        <select className=\"select\" onChange={onaboutCountry}>\n                                            {CodeCountries}\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='AboutCountry'>\n                                {dataCountry.length != 0 &&\n                                <AboutCountry dataCountry={dataCountry}/>\n                                }\n                            </div>\n                        </Fade>\n                    </div>\n                </section>\n            </IntlProvider>\n        </div>\n    );\n}\n\nexport default (App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {CountryReducer} from \"./CountryReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    country: CountryReducer\r\n\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\nexport default store\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\n// the translations\r\n// (tip move them in a JSON file and import them)\r\nconst resources = {\r\n    en: {\r\n        translation: {\r\n            \"Welcome to React\": \"Welcome to React and react-i18\"\r\n        }\r\n    }\r\n};\r\n\r\ni18n\r\n    .use(initReactI18next) // passes i18n down to react-i18\r\n    .init({\r\n        resources,\r\n        lng: \"en\",\r\n\r\n        keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./bll/store\";\nimport './i18n';\n\nReactDOM.render(\n\n  <React.StrictMode>\n      <Provider store={store}>\n\n    <App />\n          </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}